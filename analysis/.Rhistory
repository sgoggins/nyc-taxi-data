library(ggplot2)
library(ggmap)
library(dplyr)
library(reshape2)
library(zoo)
library(scales)
library(extrafont)
install.packages("extrafont")
library(extrafont)
library(grid)
library(RPostgreSQL)
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(rgdal)
install.packages("rgdal")
library(maptools)
install.packages("maptools")
library(RPostgreSQL)
library(rgdal)
library(maptools)
gpclibPermit()
source("helpers.R")
?`dbConnect,character-metho
''
`
?dbconnect
?dbConnect
library(grid)
library(RPostgreSQL)
library(rgdal)
library(maptools)
gpclibPermit()
source("helpers.R")
dbDriver
?dbDriver
library(maptools)
gpclibPermit()
source("helpers.R")
tracts = spTransform(readOGR("../nyct2010_15b", layer = "nyct2010"), CRS("+proj=longlat +datum=WGS84"))
tracts@data$id = as.character(as.numeric(rownames(tracts@data)) + 1)
tracts.points = fortify(tracts, region = "id")
tracts.map = inner_join(tracts.points, tracts@data, by = "id")
tracts.points = fortify(tracts, region = "id")
install.packages("gpclib")
library(gpclib)
gpclibPermit()
source("helpers.R")
# this script assumes that queries in prepare_analysis.sql have been run
# import spatial data for census tracts and neighborhoods
tracts = spTransform(readOGR("../nyct2010_15b", layer = "nyct2010"), CRS("+proj=longlat +datum=WGS84"))
tracts@data$id = as.character(as.numeric(rownames(tracts@data)) + 1)
tracts.points = fortify(tracts, region = "id")
tracts.map = inner_join(tracts.points, tracts@data, by = "id")
nyc_map = tracts.map
ex_staten_island_map = filter(tracts.map, BoroName != "Staten Island")
manhattan_map = filter(tracts.map, BoroName == "Manhattan")
# NYC dot maps
pickups = query("SELECT * FROM trips_by_lat_long_cab_type ORDER BY count")
source("helpers.R")
# this script assumes that queries in prepare_analysis.sql have been run
# import spatial data for census tracts and neighborhoods
tracts = spTransform(readOGR("../nyct2010_15b", layer = "nyct2010"), CRS("+proj=longlat +datum=WGS84"))
tracts@data$id = as.character(as.numeric(rownames(tracts@data)) + 1)
tracts.points = fortify(tracts, region = "id")
tracts.map = inner_join(tracts.points, tracts@data, by = "id")
nyc_map = tracts.map
ex_staten_island_map = filter(tracts.map, BoroName != "Staten Island")
manhattan_map = filter(tracts.map, BoroName == "Manhattan")
# NYC dot maps
pickups = query("SELECT * FROM trips_by_lat_long_cab_type ORDER BY count")
library(ggplot2)
library(ggmap)
exit
library(ggplot2)
library(ggmap)
install.packages("ggmap")
library(ggplot2)
library(ggmap)
library(dplyr)
library(reshape2)
library(zoo)
library(scales)
library(extrafont)
library(grid)
library(RPostgreSQL)
library(rgdal)
library(maptools)
library(gpclib)
gpclibPermit()
source("helpers.R")
# this script assumes that queries in prepare_analysis.sql have been run
# import spatial data for census tracts and neighborhoods
tracts = spTransform(readOGR("../nyct2010_15b", layer = "nyct2010"), CRS("+proj=longlat +datum=WGS84"))
tracts@data$id = as.character(as.numeric(rownames(tracts@data)) + 1)
tracts.points = fortify(tracts, region = "id")
tracts.map = inner_join(tracts.points, tracts@data, by = "id")
nyc_map = tracts.map
ex_staten_island_map = filter(tracts.map, BoroName != "Staten Island")
manhattan_map = filter(tracts.map, BoroName == "Manhattan")
# NYC dot maps
pickups = query("SELECT * FROM trips_by_lat_long_cab_type ORDER BY count")
?install.packages
ls
?dir.create
dir.create(~/libs, showWarnings=TRUE)
dir.create("~/libs", showWarnings=TRUE)
?install.packages
.libPaths()
.libPaths()
?.libPaths
?install.packages
tracts = spTransform(readOGR("../nyct2010_15b", layer = "nyct2010"), CRS("+proj=longlat +datum=WGS84"))
tracts@data$id = as.character(as.numeric(rownames(tracts@data)) + 1)
tracts.points = fortify(tracts, region = "id")
tracts.map = inner_join(tracts.points, tracts@data, by = "id")
nyc_map = tracts.map
ex_staten_island_map = filter(tracts.map, BoroName != "Staten Island")
manhattan_map = filter(tracts.map, BoroName == "Manhattan")
# NYC dot maps
pickups = query("SELECT * FROM trips_by_lat_long_cab_type ORDER BY count")
pickups = mutate(pickups, cab_type_id = factor(cab_type_id))
alpha_range = c(0.14, 0.75)
size_range = c(0.134, 0.173)
p = ggplot() +
geom_polygon(data = ex_staten_island_map,
aes(x = long, y = lat, group = group),
fill = "#080808", color = "#080808") +
geom_point(data = pickups,
aes(x = pickup_long, y = pickup_lat, alpha = count, size = count, color = cab_type_id)) +
scale_alpha_continuous(range = alpha_range, trans = "log", limits = range(pickups$count)) +
scale_size_continuous(range = size_range, trans = "log", limits = range(pickups$count)) +
scale_color_manual(values = c("#ffffff", green_hex)) +
coord_map(xlim = range(ex_staten_island_map$long), ylim = range(ex_staten_island_map$lat)) +
title_with_subtitle("New York City Taxi Pickups", "2009â€“2015") +
theme_dark_map(base_size = 24) +
theme(legend.position = "none")
fname = "graphs/taxi_pickups_map.png"
png(filename = fname, width = 490, height = 759, bg = "black")
pickups = query("SELECT * FROM trips_by_lat_long_cab_type ORDER BY count")
pickups = mutate(pickups, cab_type_id = factor(cab_type_id))
